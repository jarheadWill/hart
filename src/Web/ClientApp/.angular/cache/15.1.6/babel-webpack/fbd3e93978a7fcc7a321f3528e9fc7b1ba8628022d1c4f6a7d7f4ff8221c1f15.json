{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n  }\n  get apiUrl() {\n    return `/`;\n  }\n  setUrl(url) {\n    if (!url.startsWith(this.apiUrl)) {\n      url = `${this.apiUrl}${this.trimStart(url, '/')}`;\n    }\n    return url;\n  }\n  trimStart(str, token) {\n    if (str && str.length > 0 && str[0] === token) {\n      return this.trimStart(str.substring(1), token);\n    }\n    return str;\n  }\n  get(url, options) {\n    url = this.setUrl(url);\n    return this.http.get(url, options);\n  }\n  put(url, body, options) {\n    url = this.setUrl(url);\n    return this.http.put(url, body, options);\n  }\n  post(url, body, options) {\n    if (!body) {\n      body = {};\n    }\n    url = this.setUrl(url);\n    return this.http.post(url, body, options);\n  }\n  delete(url, options) {\n    url = this.setUrl(url);\n    return this.http.delete(url, options);\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,UAAU;EAEnBC,YACcC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAGlC,IAAYC,MAAM;IACd,OAAO,GAAG;EACd;EACQC,MAAM,CAACC,GAAW;IACtB,IAAI,CAACA,GAAG,CAACC,UAAU,CAAC,IAAI,CAACH,MAAM,CAAC,EAAE;MAC9BE,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,GAAG,IAAI,CAACI,SAAS,CAACF,GAAG,EAAE,GAAG,CAAC,EAAE;;IAGrD,OAAOA,GAAG;EACd;EAEQE,SAAS,CAACC,GAAW,EAAEC,KAAa;IACxC,IAAID,GAAG,IAAIA,GAAG,CAACE,MAAM,GAAG,CAAC,IAAIF,GAAG,CAAC,CAAC,CAAC,KAAKC,KAAK,EAAE;MAC3C,OAAO,IAAI,CAACF,SAAS,CAACC,GAAG,CAACG,SAAS,CAAC,CAAC,CAAC,EAAEF,KAAK,CAAC;;IAGlD,OAAOD,GAAG;EACd;EAEOI,GAAG,CAACP,GAAW,EAAEQ,OAAyB;IAC7CR,GAAG,GAAG,IAAI,CAACD,MAAM,CAACC,GAAG,CAAC;IACtB,OAAO,IAAI,CAACH,IAAI,CAACU,GAAG,CAACP,GAAG,EAAEQ,OAAO,CAAC;EACtC;EAEOC,GAAG,CAACT,GAAW,EAAEU,IAAS,EAAEF,OAAyB;IACxDR,GAAG,GAAG,IAAI,CAACD,MAAM,CAACC,GAAG,CAAC;IACtB,OAAO,IAAI,CAACH,IAAI,CAACY,GAAG,CAACT,GAAG,EAAEU,IAAI,EAAEF,OAAO,CAAC;EAC5C;EAEOG,IAAI,CAACX,GAAW,EAAEU,IAAU,EAAEF,OAAyB;IAC1D,IAAG,CAACE,IAAI,EAAC;MACLA,IAAI,GAAG,EAAE;;IAEbV,GAAG,GAAG,IAAI,CAACD,MAAM,CAACC,GAAG,CAAC;IACtB,OAAO,IAAI,CAACH,IAAI,CAACc,IAAI,CAACX,GAAG,EAAEU,IAAI,EAAEF,OAAO,CAAC;EAC7C;EAEOI,MAAM,CAACZ,GAAW,EAAEQ,OAAyB;IAChDR,GAAG,GAAG,IAAI,CAACD,MAAM,CAACC,GAAG,CAAC;IACtB,OAAO,IAAI,CAACH,IAAI,CAACe,MAAM,CAACZ,GAAG,EAAEQ,OAAO,CAAC;EACzC;;AA9CSb,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAkB,SAAVlB,UAAU;EAAAmB,YAFT;AAAM","names":["ApiService","constructor","http","apiUrl","setUrl","url","startsWith","trimStart","str","token","length","substring","get","options","put","body","post","delete","factory","providedIn"],"sourceRoot":"","sources":["/Users/will/Github/hart/src/Web/ClientApp/src/app/services/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n    constructor(\r\n        protected http: HttpClient) { }\r\n\r\n\r\n    private get apiUrl(): string {\r\n        return `/`;\r\n    }\r\n    private setUrl(url: string): string {\r\n        if (!url.startsWith(this.apiUrl)) {\r\n            url = `${this.apiUrl}${this.trimStart(url, '/')}`;\r\n        }\r\n\r\n        return url;\r\n    }\r\n\r\n    private trimStart(str: string, token: string): string {\r\n        if (str && str.length > 0 && str[0] === token) {\r\n            return this.trimStart(str.substring(1), token);\r\n        }\r\n\r\n        return str;\r\n    }\r\n\r\n    public get(url: string, options?: any | undefined): Observable<any> {\r\n        url = this.setUrl(url);\r\n        return this.http.get(url, options);\r\n    }\r\n\r\n    public put(url: string, body: any, options?: any | undefined): Observable<any> {\r\n        url = this.setUrl(url);\r\n        return this.http.put(url, body, options);\r\n    }\r\n\r\n    public post(url: string, body?: any, options?: any | undefined): Observable<any> {\r\n        if(!body){\r\n            body = {};\r\n        }\r\n        url = this.setUrl(url);\r\n        return this.http.post(url, body, options);\r\n    }\r\n\r\n    public delete(url: string, options?: any | undefined): Observable<any> {\r\n        url = this.setUrl(url);\r\n        return this.http.delete(url, options);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}